{"version":3,"file":"static/js/485.7c2fe567.chunk.js","mappings":"sKAAO,IAAMA,EAAgB,SAAAC,GAE3B,OADa,IAAIC,KAAKD,GACVE,aACb,C,qMCAYC,EAAQC,EAAAA,GAAAA,GAAH,sFAKLC,EAAUD,EAAAA,GAAAA,KAAH,wEAKPE,EAAWF,EAAAA,GAAAA,GAAH,+CAIRG,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,mG,SCTP,SAASK,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAqBC,EAAAA,EAAAA,KAAbC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IAEPC,GAAWC,EAAAA,EAAAA,MAmBjB,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,0FACF,sBADE,SAGlBP,GAAa,GAHK,SAIKQ,EAAAA,EAAAA,IAAA,UAAaN,GAAb,OAHP,uBAGO,OAA+BC,IAJpC,OAIZM,EAJY,OAKlBX,EAAYW,EAASvB,KAAKwB,SALR,gDAOlBC,QAAQC,IAAR,MAPkB,yBASlBZ,GAAa,GATK,4EAAH,qDAanBO,GACD,GAAE,CAACL,EAAKC,KAGP,iCACE,SAACd,EAAD,6BACCU,IAAa,SAACR,EAAD,yBACbM,EAASgB,OAAS,IACjB,wBACGhB,EAASiB,KAAI,SAAAC,GAAK,OACjB,SAACvB,EAAD,WACE,UAACC,EAAD,CAAWuB,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMf,GAArD,UAEGW,EAAMK,MAFT,gBAEqBnC,EAAAA,EAAAA,GAAc8B,EAAMM,cAFzC,SADaN,EAAME,GADJ,QAY5B,C","sources":["instruments/dateTransform.js","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["export const yearTransform = data => {\n  const date = new Date(data);\n  return date.getFullYear();\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  margin: 40px 0;\n  padding-left: 20px;\n  font-size: 25px;\n`;\nexport const Loading = styled.span`\n  display: inline-block;\n  margin-left: 20px;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 4px;\n`;\n\nexport const MovieLink = styled(Link)`\n  color: blue;\n\n  font-size: 20px;\n\n  &:focus {\n    color: red;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useContexFetch } from '../../instruments/fetchContext';\nimport { yearTransform } from '../../instruments/dateTransform';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { ListItem, MovieLink, Title, Loading } from './Home.styled';\n\nexport default function Home() {\n  const [trending, setTrending] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { url, key } = useContexFetch();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchTrending = async () => {\n      const DAY_TREND = 'trending/movie/day?';\n      try {\n        setIsLoading(true);\n        const response = await axios.get(`${url}${DAY_TREND}${key}`);\n        setTrending(response.data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTrending();\n  }, [url, key]);\n\n  return (\n    <>\n      <Title>Tranding today</Title>\n      {isLoading && <Loading>Loading...</Loading>}\n      {trending.length > 0 && (\n        <ul>\n          {trending.map(movie => (\n            <ListItem key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {/* <img src={IMAGE_URL + movie.poster_path} /> */}\n                {movie.title} {`(${yearTransform(movie.release_date)})`}\n              </MovieLink>\n            </ListItem>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["yearTransform","data","Date","getFullYear","Title","styled","Loading","ListItem","MovieLink","Link","Home","useState","trending","setTrending","isLoading","setIsLoading","useContexFetch","url","key","location","useLocation","useEffect","fetchTrending","axios","response","results","console","log","length","map","movie","to","id","state","from","title","release_date"],"sourceRoot":""}