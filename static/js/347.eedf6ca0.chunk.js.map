{"version":3,"file":"static/js/347.eedf6ca0.chunk.js","mappings":"0RAOMA,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAEP,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAqBE,EAAAA,EAAAA,KAAbC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IAsBb,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMN,GAAN,gGAESO,EAAAA,EAAAA,IAAA,UACbJ,EADa,iBACDH,EADC,oBACkBI,EADlB,oBAEpBI,MAAK,SAAAC,GACJ,OAAOA,EAAIC,KAAKd,IACjB,IANW,OAOU,KALlBe,EAFQ,QAODC,QACXb,EAAS,mDAEXF,EAAQc,GAVM,gDAYdZ,EAAS,EAAD,IAZM,yDAAH,sDAgBfO,EAAUN,EACX,GAAE,CAACA,EAASI,EAAKD,KAGhB,gCACGL,IAAS,SAAC,KAAD,UAAQA,IACjBF,EAAKgB,OAAS,IAAK,SAACpB,EAAD,CAAUI,KAAMA,MAGzC,C,mNCvCYiB,EAAOC,EAAAA,GAAAA,GAAH,6CAGJC,EAAQD,EAAAA,GAAAA,IAAH,yCAGLE,EAAYF,EAAAA,GAAAA,IAAH,6FAKTG,EAAOH,EAAAA,GAAAA,KAAH,4CAGJI,EAAUJ,EAAAA,GAAAA,KAAH,8CAGPK,EAAQL,EAAAA,GAAAA,GAAH,8C","sources":["components/Movie/Cast.jsx","components/Movie/Cast.styled.jsx"],"sourcesContent":["import { useState, useEffect, lazy } from 'react';\nimport { useContexFetch } from '../../instruments/useContext';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { Title } from './Cast.styled';\n\nconst CastData = lazy(() => import('./CastData'));\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n  const { url, key } = useContexFetch();\n\n  useEffect(() => {\n    const fetchCast = async movieId => {\n      try {\n        const response = await axios\n          .get(`${url}movie/${movieId}/credits?${key}&language=en-US`)\n          .then(res => {\n            return res.data.cast;\n          });\n        if (response.length === 0) {\n          setError(\"We don't have any available cast for this movie\");\n        }\n        setCast(response);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    fetchCast(movieId);\n  }, [movieId, key, url]);\n\n  return (\n    <>\n      {error && <Title>{error}</Title>}\n      {cast.length > 0 && <CastData cast={cast} />}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\nexport const Image = styled.img`\n  width: 200px;\n`;\nexport const Character = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n  flex-direction: column;\n`;\nexport const Name = styled.span`\n  font-size: 20px;\n`;\nexport const Wrapper = styled.span`\n  font-weight: bold;\n`;\nexport const Title = styled.h3`\n  padding-left: 20px;\n`;"],"names":["CastData","lazy","Cast","useState","cast","setCast","error","setError","movieId","useParams","useContexFetch","url","key","useEffect","fetchCast","axios","then","res","data","response","length","List","styled","Image","Character","Name","Wrapper","Title"],"sourceRoot":""}